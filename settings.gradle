dependencyResolutionManagement {
    repositoriesMode.set(RepositoriesMode.FAIL_ON_PROJECT_REPOS)
    repositories {
        maven { url 'https://maven.aliyun.com/repository/central' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        maven { url 'https://raw.githubusercontent.com/saki4510t/libcommon/master/repository/' }
        maven { url 'https://gitee.com/liuchaoya/libcommon/raw/master/repository/' }
        maven { url "https://repo.eclipse.org/content/repositories/paho-snapshots/" }
        maven { url 'https://developer.huawei.com/repo/' }
        maven { url "https://jitpack.io" }
        maven { url 'https://www.jitpack.io' }
        mavenLocal()
        mavenCentral()
        google()
    }
}

rootProject.name = "ALibKit_Google"
include ':app'
include ':android_gms:play_services_ads'
include ':android_gms:play_services_ads_identifier'
include ':android_gms:play_services_auth'
include ':android_gms:play_services_location'
include ':android_play:review'
include ':android_ump:user_messaging_platform'
include ':dagger'
include ':dagger:dagger_android'
include ':dagger:dagger_android_support'
include ':dagger:hilt_android'
include ':firebase:firebase_analytics'
include ':firebase:firebase_auth'
include ':firebase:firebase_basic'
include ':firebase:firebase_config'
include ':firebase:firebase_config_test'
include ':firebase:firebase_crashlytics'
include ':firebase:firebase_crashlytics_ndk'
include ':firebase:firebase_messaging'
include ':gson'
include ':guava'
include ':guava:listenablefuture'
include ':material'
include ':mlkit:text_recognition_chinese'
include ':zxing'
include ':material:test'
//ALibKit_Airbnb
include ':ALibKit_Airbnb'
project(':ALibKit_Airbnb').projectDir = new File("D:\\WorkSpace\\GitHub\\ALibKit_Airbnb")
include ':ALibKit_Airbnb:lottie'
//ALibKit_Jetpack
include ':ALibKit_Jetpack'
project(':ALibKit_Jetpack').projectDir = new File("D:\\WorkSpace\\GitHub\\ALibKit_Jetpack")
include ':ALibKit_Jetpack:core'
include ':ALibKit_Jetpack:databinding'
include ':ALibKit_Jetpack:annotation'
//ALibKit_Jetbrains
include ':ALibKit_Jetbrains'
project(':ALibKit_Jetbrains').projectDir = new File("D:\\WorkSpace\\GitHub\\ALibKit_Jetbrains")
include ':ALibKit_Jetbrains:kotlin_stdlib'
include ':ALibKit_Jetbrains:kotlinx_coroutines'
//ASwiftKit
include ':ASwiftKit'
project(':ASwiftKit').projectDir = new File("D:\\WorkSpace\\GitHub\\ASwiftKit")
include ':ASwiftKit:basick'
include ':ASwiftKit:uik:databinding'
include ':ASwiftKit:xmlk'
//KUtilKit
include ':KUtilKit'
project(':KUtilKit').projectDir = new File("D:\\WorkSpace\\GitHub\\KUtilKit")
include ':KUtilKit:android'
include ':KUtilKit:kotlin'
//AAdaptKit
include ':AAdaptKit'
project(':AAdaptKit').projectDir = new File("D:\\WorkSpace\\GitHub\\AAdaptKit")
include ':AAdaptKit:dynamic_colors'
//AAnimKit
include ':AAnimKit'
project(':AAnimKit').projectDir = new File("D:\\WorkSpace\\GitHub\\AAnimKit")
include ':AAnimKit:lottie'
//AAnimKit
include ':AXmlKit'
project(':AXmlKit').projectDir = new File("D:\\WorkSpace\\GitHub\\AXmlKit")
include ':AXmlKit:dialogk:bottomsheet'


include ':protobuf'
